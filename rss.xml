<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[JS y React en Español]]></title><description><![CDATA[Un espacio para aprender JS y React]]></description><link>https://soriac.github.io/blog</link><generator>RSS for Node</generator><lastBuildDate>Wed, 29 May 2019 00:16:10 GMT</lastBuildDate><item><title><![CDATA[Crear un blog con Gatsby y Github Pages]]></title><description><![CDATA[Gatsby es un framework basado en React para desarrollar sitios web y aplicaciones mucho mas fácil y rápidamente. Si ya sabés React y siempre…]]></description><link>https://soriac.github.io/blog/como-hacer-un-blog/post/</link><guid isPermaLink="false">https://soriac.github.io/blog/como-hacer-un-blog/post/</guid><pubDate>Sat, 25 May 2019 22:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Gatsby es un framework basado en React para desarrollar sitios web y aplicaciones mucho mas fácil y rápidamente. Si ya sabés React y siempre quisite tener un blog, podés hacerlo con Gatsby en menos de una hora. Gatsby también usa GraphQL para modelado y manejo de datos, pero para esta guía no hace falta que sepas lo que es.&lt;/p&gt;
&lt;h2&gt;Instalar las herramientas de CLI de Gatsby&lt;/h2&gt;
&lt;p&gt;Las herramientas de CLI de Gatsby nos permiten crear nuevos proyectos y facilitan el desarrollo rápido de los mismos. La instalamos como dependencia global, usando npm, como cualquier otra dependencia de JavaScript.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; i -g gatsby-cli
&lt;span class=&quot;token comment&quot;&gt;# Alternativamente, con yarn&lt;/span&gt;
$ &lt;span class=&quot;token function&quot;&gt;yarn&lt;/span&gt; global &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; gatsby-cli&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;small&gt;Se puede usar tanto yarn como npm. A partir de acá voy a asumir que si usas Yarn, ya sabés cómo se usa, así que no voy a poner mas instrucciones.&lt;/small&gt;&lt;/p&gt;
&lt;h2&gt;Crear un proyecto vainilla&lt;/h2&gt;
&lt;p&gt;Habiendo instalado las herramientas de CLI, ya podemos crear un nuevo proyecto básico de gatsby. Para hacer esto llamamos al ejecutable de gatsby con el argumento &lt;code class=&quot;language-text&quot;&gt;new&lt;/code&gt; y el nombre de nuestro proyecto.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ gatsby new blog&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;La primera vez que corramos este comando nos va a preguntar si preferimos yarn o npm, y luego descarga e instala todas las dependencias usando el administrador de paquetes que elijamos. Recordemos al terminar de instalar, de movernos al directorio de nuestro proyecto con:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;cd&lt;/span&gt; blog&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Desde acá estamos listos para desarrollar. Podemos levantar nuestro servidor de desarrollo con:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ gatsby develop&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Este comando abre un servidor de desarrollo con nuestra página en &lt;code class=&quot;language-text&quot;&gt;http://localhost:8000&lt;/code&gt;, y su esquema de GraphQL en &lt;code class=&quot;language-text&quot;&gt;http://localhost:8000/___graphql&lt;/code&gt;.&lt;/p&gt;
&lt;br/&gt;
&lt;h2&gt;Crear un proyecto con un starter&lt;/h2&gt;
&lt;p&gt;Aunque Gatsby nos facilita el uso de muchas tecnologías, no es lo mas práctico arrancar con un proyecto en blanco. Es por esto que existen proyectos públicos, precreados, llamados &lt;strong&gt;starters&lt;/strong&gt;, que nos proveen un entorno un poco más desarrollado, con algunas funcionalidades ya implementadas.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.gatsbyjs.org/starters/?v=2&quot;&gt;Hay una lista de starters&lt;/a&gt; en la cual podemos buscar distintos proyectos &lt;/p&gt;
&lt;p&gt;Para crear un proyecto basado en un starter simplemente agregamos la URL del starter como argumento cuando lo creamos, por ejemplo:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ gatsby new blog https://github.com/gatsbyjs/gatsby-starter-blog&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Con este starter tenemos preparado un blog básico con Gatsby!&lt;/p&gt;
&lt;h2&gt;Cambiar el contenido de nuestro blog&lt;/h2&gt;
&lt;p&gt;En la raíz del proyecto hay un archivo llamado &lt;code class=&quot;language-text&quot;&gt;gatsby-config.js&lt;/code&gt;. Este archivo contiene la configuración de nuestros plugins de Gatsby, junto con algunos atributos que se utilizan en el blog.
&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Por ejemplo, dentro de &lt;code class=&quot;language-text&quot;&gt;siteMetadata&lt;/code&gt; viven varias variables de configuración de nuestro blog. Pueden cambiar estas variables y ver en tiempo real como cambia el blog. Por ejemplo, para mi blog, podría quedar algo así…&lt;/p&gt;
&lt;p&gt;&lt;em&gt;blog-post.js&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    siteMetadata&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        title&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`JS y React en Español`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        author&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`Cristian Soria`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        description&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`Un espacio para aprender JS y React`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        siteUrl&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token string&quot;&gt;`soriac.github.io`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        social&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// el resto de los exports...&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;small&gt;Asegurate de que los 5 campos tengan algún valor! Si borrás un campo por completo, se rompen los otros 4. Si no tenés nada que poner, podés poner un string o un objeto vacío…&lt;/small&gt;&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;Dentro de la carpeta &lt;code class=&quot;language-text&quot;&gt;content&lt;/code&gt; vive todo el contenido de nuestro blog. Por ahora nos vamos a enfocar en la carpeta &lt;code class=&quot;language-text&quot;&gt;assets&lt;/code&gt;, que contiene la foto del autor del blog. Simplemente cambiamos el archivo &lt;code class=&quot;language-text&quot;&gt;profile-pic.jpg&lt;/code&gt; por nuestra foto.&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;También nos gustaría cambiar el texto del bio del autor. Dentro de &lt;code class=&quot;language-text&quot;&gt;src/components/bio&lt;/code&gt; se encuentra el componente que renderiza la bio del autor. Hagamos que diga algo sobre nosotros…&lt;/p&gt;
&lt;p&gt;&lt;em&gt;src/components/bio&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// ...el resto del componente&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        Escrito por &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;strong&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;author&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;strong&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; desde Buenos Aires&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Argentina&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;
        Trabajo en Buenos Aires como full&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;stack dev y dando talleres de React&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;p&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;small&gt; Este componente utiliza un &lt;code class=&quot;language-text&quot;&gt;StaticQuery&lt;/code&gt; de GraphQL para pedir los datos estáticos del blog, y de ahí obtiene el nombre del autor (en la variable &lt;code class=&quot;language-text&quot;&gt;author&lt;/code&gt;). Con GraphQL podemos elejir exactamente que datos necesitamos para nuestra página, que es súper práctico! Si querés investigar un poco más, recomiendo &lt;a href=&quot;https://graphql.org/learn/&quot;&gt;los tutoriales oficiales de GraphQL&lt;/a&gt;, y que &lt;a href=&quot;https://www.gatsbyjs.org/tutorial/part-four/#use-a-staticquery&quot;&gt;intentes cambiar el componente StaticQuery por el hook useStaticQuery&lt;/a&gt;.&lt;/small&gt;&lt;/p&gt;
&lt;h2&gt;Agregar publicaciones&lt;/h2&gt;
&lt;p&gt;Para escribir y agregar publicaciones vamos a estar usando el lenguaje de marcado &lt;strong&gt;Markdown&lt;/strong&gt;. Probablemente lo usaste o lo viste en Github, ya que todos los README.md están escritos de esta manera.&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;Les dejo un excelente recurso para tener a mano cuando escribimos Markdown, &lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&quot;&gt;La Markdown Cheatsheet de Adam Pritchard&lt;/a&gt;.&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;Para agregar un post simplemente creamos una carpeta dentro de &lt;code class=&quot;language-text&quot;&gt;/content/blog&lt;/code&gt;, y ponemos el archivo de Markdown de nuestro post dentro de la misma.&lt;/p&gt;
&lt;h2&gt;Estilo global&lt;/h2&gt;
&lt;p&gt;Existen muchas formas de aplicar estilos a un proyecto de Gatsby, pero el mas sencillo es con un .css global. Para lograr esto debemos crear una carpeta con el nombre &lt;code class=&quot;language-text&quot;&gt;styles&lt;/code&gt; dentro de &lt;code class=&quot;language-text&quot;&gt;src&lt;/code&gt;. Dentro de esta carpeta creamos el archivo &lt;code class=&quot;language-text&quot;&gt;global.css&lt;/code&gt;, y ponemos nuestras reglas de css.&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;Para que estas reglas se apliquen a nuestra página, debemos editar el archivo &lt;code class=&quot;language-text&quot;&gt;gatsby-browser.js&lt;/code&gt;, agregando al final:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;gatsby-browser.js&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;./src/styles/global.css&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Publicar en Github Pages&lt;/h2&gt;
&lt;p&gt;Una vez que estamos contentos con nuestro blog, podemos publicarlo en Github para que todos lo puedan leer. La primera vez que hacemos esto hay algunos pasos a seguir.&lt;/p&gt;
&lt;h3&gt;Pasos previos&lt;/h3&gt;
&lt;p&gt;Primero, si estas en windows, vas a tener que configurar el ayudante de credenciales de git. Esto se hace con: &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; config --global credential.helper wincred&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Luego, tenemos que crear un repositorio en github que tenga el siguiente nombre:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Donde &amp;#x3C;username&gt; es tu usuario de github.&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;Una vez que hayamos creado el repositorio podemos agregar el remote, con &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; remote &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; origin https://github.com/&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;username&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;/&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;username&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;.github.io.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;También debemos instalar &lt;code class=&quot;language-text&quot;&gt;gh-pages&lt;/code&gt;. Este es un paquete que se encarga de convertir y subir los archivos correctamente a nuestro repo.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; gh-pages --save-dev&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;small&gt;Cuando configuré mi blog, me tiraba un error que resolví corriendo &lt;code class=&quot;language-text&quot;&gt;npm install&lt;/code&gt;. Creo que al agregar dependencias de desarrollo con —save-dev no hizo correctamente el install. Si no te anda el deploy, probá eso!&lt;/small&gt;&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;Finalmente, vamos a modificar nuestro &lt;code class=&quot;language-text&quot;&gt;package.json&lt;/code&gt;, para agregar el comando que nos permite armar y subir nuestra página.
&lt;em&gt;package.json&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;    &lt;span class=&quot;token property&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;deploy&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby build &amp;amp;&amp;amp; gh-pages -d public -b master&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;build&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby build&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;develop&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby develop&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;format&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;prettier --write src/**/*.{js,jsx}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;npm run develop&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;&quot;serve&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby serve&quot;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Publicando&lt;/h3&gt;
&lt;p&gt;Una vez que hicimos todos los pasos previos, podemos publicar nuestro blog cada vez que hacemos un cambio con el simple comando &lt;code class=&quot;language-text&quot;&gt;deploy&lt;/code&gt;. Esto va a publicar nuestro blog en la url que te había contado: https://&amp;#x3C;username&gt;.github.io&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;npm&lt;/span&gt; run deploy&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Felicitaciones! Ya podes compartirle tu blog a todos tus amigos y familiares, y molestarlos cada vez que hagas un post.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/soriac&quot;&gt;Podés encontrar el código fuente de mi blog en Github&lt;/a&gt;, y podés usarlo para lo que quieras. Yo le hice varias modificaciones más de las que hablé en este post, y seguramente le voy a hacer muchas otras cuando tenga más tiempo.&lt;/p&gt;</content:encoded></item></channel></rss>